From 8796947aa3065b18cbf2c8ebdc7ce34a471bca3f Mon Sep 17 00:00:00 2001
From: Alan Issac <AlanIssac@psync.ai>
Date: Sat, 2 Aug 2025 18:36:37 -0700
Subject: [PATCH] Add speaker diarization

---
 .../livekit/plugins/deepgram/stt.py           | 46 +++++++++++++++----
 1 file changed, 36 insertions(+), 10 deletions(-)

diff --git a/livekit-plugins/livekit-plugins-deepgram/livekit/plugins/deepgram/stt.py b/livekit-plugins/livekit-plugins-deepgram/livekit/plugins/deepgram/stt.py
index 889346b5..22f4244e 100644
--- a/livekit-plugins/livekit-plugins-deepgram/livekit/plugins/deepgram/stt.py
+++ b/livekit-plugins/livekit-plugins-deepgram/livekit/plugins/deepgram/stt.py
@@ -66,6 +66,7 @@ class STTOptions:
     numerals: bool = False
     mip_opt_out: bool = False
     tags: NotGivenOr[list[str]] = NOT_GIVEN
+    diarize: bool = False
 
 
 class STT(stt.STT):
@@ -92,6 +93,7 @@ class STT(stt.STT):
         base_url: str = BASE_URL,
         numerals: bool = False,
         mip_opt_out: bool = False,
+        diarize: bool = False,
     ) -> None:
         """Create a new instance of Deepgram STT.
 
@@ -118,6 +120,7 @@ class STT(stt.STT):
             base_url: The base URL for Deepgram API. Defaults to "https://api.deepgram.com/v1/listen".
             numerals: Whether to include numerals in the transcription. Defaults to False.
             mip_opt_out: Whether to take part in the model improvement program
+            diarize: Whether to enable speaker diarization. Defaults to False.
 
         Raises:
             ValueError: If no API key is provided or found in environment variables.
@@ -158,6 +161,7 @@ class STT(stt.STT):
             numerals=numerals,
             mip_opt_out=mip_opt_out,
             tags=_validate_tags(tags) if is_given(tags) else [],
+            diarize=diarize,
         )
         self._session = http_session
         self._streams = weakref.WeakSet[SpeechStream]()
@@ -185,6 +189,7 @@ class STT(stt.STT):
             "keywords": self._opts.keywords,
             "profanity_filter": config.profanity_filter,
             "numerals": config.numerals,
+            "diarize": config.diarize,
         }
         if config.language:
             recognize_config["language"] = config.language
@@ -256,6 +261,7 @@ class STT(stt.STT):
         numerals: NotGivenOr[bool] = NOT_GIVEN,
         mip_opt_out: NotGivenOr[bool] = NOT_GIVEN,
         tags: NotGivenOr[list[str]] = NOT_GIVEN,
+        diarize: NotGivenOr[bool] = NOT_GIVEN,
     ) -> None:
         if is_given(language):
             self._opts.language = language
@@ -287,6 +293,8 @@ class STT(stt.STT):
             self._opts.mip_opt_out = mip_opt_out
         if is_given(tags):
             self._opts.tags = _validate_tags(tags)
+        if is_given(diarize):
+            self._opts.diarize = diarize
 
         for stream in self._streams:
             stream.update_options(
@@ -304,6 +312,7 @@ class STT(stt.STT):
                 profanity_filter=profanity_filter,
                 numerals=numerals,
                 mip_opt_out=mip_opt_out,
+                diarize=diarize,
             )
 
     def _sanitize_options(
@@ -372,6 +381,7 @@ class SpeechStream(stt.SpeechStream):
         numerals: NotGivenOr[bool] = NOT_GIVEN,
         mip_opt_out: NotGivenOr[bool] = NOT_GIVEN,
         tags: NotGivenOr[list[str]] = NOT_GIVEN,
+        diarize: NotGivenOr[bool] = NOT_GIVEN,
     ) -> None:
         if is_given(language):
             self._opts.language = language
@@ -403,6 +413,8 @@ class SpeechStream(stt.SpeechStream):
             self._opts.mip_opt_out = mip_opt_out
         if is_given(tags):
             self._opts.tags = _validate_tags(tags)
+        if is_given(diarize):
+            self._opts.diarize = diarize
 
         self._reconnect_event.set()
 
@@ -532,6 +544,7 @@ class SpeechStream(stt.SpeechStream):
             "profanity_filter": self._opts.profanity_filter,
             "numerals": self._opts.numerals,
             "mip_opt_out": self._opts.mip_opt_out,
+            "diarize": self._opts.diarize,
         }
         if self._opts.keywords:
             live_config["keywords"] = self._opts.keywords
@@ -635,12 +648,18 @@ def live_transcription_to_speech_data(language: str, data: dict) -> list[stt.Spe
 
     speech_data = []
     for alt in dg_alts:
+        # Extract speaker information from the first word if diarization is enabled
+        speaker_id = None
+        if alt["words"] and "speaker" in alt["words"][0]:
+            speaker_id = str(alt["words"][0]["speaker"])
+        
         sd = stt.SpeechData(
             language=language,
             start_time=alt["words"][0]["start"] if alt["words"] else 0,
             end_time=alt["words"][-1]["end"] if alt["words"] else 0,
             confidence=alt["confidence"],
             text=alt["transcript"],
+            speaker_id=speaker_id,
         )
         if language == "multi" and "languages" in alt:
             sd.language = alt["languages"][0]  # TODO: handle multiple languages
@@ -661,19 +680,26 @@ def prerecorded_transcription_to_speech_event(
     # https://developers.deepgram.com/docs/language-detection
     detected_language = channel.get("detected_language")
 
+    alternatives = []
+    for alt in dg_alts:
+        # Extract speaker information from the first word if diarization is enabled
+        speaker_id = None
+        if alt["words"] and "speaker" in alt["words"][0]:
+            speaker_id = str(alt["words"][0]["speaker"])
+        
+        alternatives.append(stt.SpeechData(
+            language=language or detected_language,
+            start_time=alt["words"][0]["start"] if alt["words"] else 0,
+            end_time=alt["words"][-1]["end"] if alt["words"] else 0,
+            confidence=alt["confidence"],
+            text=alt["transcript"],
+            speaker_id=speaker_id,
+        ))
+    
     return stt.SpeechEvent(
         request_id=request_id,
         type=stt.SpeechEventType.FINAL_TRANSCRIPT,
-        alternatives=[
-            stt.SpeechData(
-                language=language or detected_language,
-                start_time=alt["words"][0]["start"] if alt["words"] else 0,
-                end_time=alt["words"][-1]["end"] if alt["words"] else 0,
-                confidence=alt["confidence"],
-                text=alt["transcript"],
-            )
-            for alt in dg_alts
-        ],
+        alternatives=alternatives,
     )
 
 
-- 
2.49.0

